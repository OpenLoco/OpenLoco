name: CI
on: [push, pull_request, workflow_dispatch]
env:
  OPENLOCO_BUILD_SERVER: GitHub
  ASSETS_SSH_KEY: ${{ secrets.ASSETS_SSH_KEY }}
jobs:
  check-code-formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    container:
      image: openrct2/openrct2-build:17-format
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run clang-format
        run: scripts/check-code-formatting.sh
  check-changelog-formatting:
    name: Check changelog formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run check-changelog-formatting
        run: scripts/check-changelog-formatting
  windows:
    name: Windows
    runs-on: windows-latest
    needs: check-code-formatting
    env:
      CONFIGURATION: Release
      POWERSHELL_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Restore artifacts, or setup vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: 89dc8be6dbcf18482a5a1bf86a2f4615c939b0fb
      - name: Build OpenLoco
        shell: cmd
        run: |
          cmake --preset windows-msvc
          cmake --build --preset windows-msvc-release
      - name: Build release
        run: |
          mkdir artifacts | Out-Null
          Copy-Item CHANGELOG.md,CONTRIBUTORS.md,LICENSE artifacts
          Copy-Item build\windows-msvc\Release\* artifacts -Recurse
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenLoco-${{ runner.os }}-Win32
          path: |
            artifacts/
            !artifacts/*.pdb
          if-no-files-found: error
      - name: Upload symbols artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenLoco-${{ runner.os }}-Win32-symbols
          path: |
            artifacts/*.pdb
          if-no-files-found: warn
      - name: Checkout Assets
        if: ${{ github.repository == 'OpenLoco/OpenLoco' && env.ASSETS_SSH_KEY != null }}
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ env.ASSETS_SSH_KEY }}
          repository: OpenLoco/LocomotionAssets
          ref: gog
          path: LocomotionAssets
      - name: Checkout Test Data
        if: ${{ github.repository == 'OpenLoco/OpenLoco' && env.ASSETS_SSH_KEY != null }}
        uses: actions/checkout@v4
        with:
          repository: OpenLoco/TestData
          ref: 00acbe42f47fa893e94bfa48d7b23cf75c894b30
          path: TestData
      - name: Run Simulate Test
        if: ${{ github.repository == 'OpenLoco/OpenLoco' && env.ASSETS_SSH_KEY != null }}
        shell: bash
        run: |
          set -e
          ./build/windows-msvc/Release/OpenLoco.exe --locomotion_path "./LocomotionAssets" simulate "./TestData/Saves/MMTest.SV5" 100000 -o "result.sv5"
          ./build/windows-msvc/Release/OpenLoco.exe --locomotion_path "./LocomotionAssets" compare "./TestData/Saves/MMTest100000_base.SV5" "result.sv5"
      - name: Run Tests
        shell: cmd
        run: |
          ctest --test-dir build\windows-msvc\ --output-on-failure

  ubuntu:
    name: Ubuntu ${{ matrix.distro }} ${{ matrix.compiler }} i686
    runs-on: ubuntu-latest
    needs: check-code-formatting
    container: ghcr.io/openloco/openloco:9-${{ matrix.distro }}32
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++, clang++]
        distro: [jammy, noble]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Install GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master
      - name: Build OpenLoco
        run: |
          cmake --preset linux -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          cmake --build --preset linux-release
      - name: Run Tests
        run: |
          ctest --test-dir build/linux/ --output-on-failure

  fedora:
    name: Fedora shared=${{ matrix.build_shared_libs }} i686 MinGW32
    runs-on: ubuntu-latest
    needs: check-code-formatting
    container: ghcr.io/openloco/openloco:9-mingw32
    strategy:
      fail-fast: false
      matrix:
        build_shared_libs: [on, off]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Install GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master
      - name: Build OpenLoco
        run: |
          cmake --preset mingw -DBUILD_SHARED_LIBS=${{ matrix.build_shared_libs }}
          cmake --build --preset mingw-release

  linux-static:
    name: Ubuntu noble g++ i686 vcpkg static linkage
    runs-on: ubuntu-latest
    needs: check-code-formatting
    container: ghcr.io/openloco/openloco:9-noble32vcpkg
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Install GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master
      - name: Workaround git permissions issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Restore artifacts, or setup vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: 89dc8be6dbcf18482a5a1bf86a2f4615c939b0fb
      - name: Build OpenLoco
        run: |
          cmake --preset linux-vcpkg-static
          cmake --build --preset linux-release-static
      # Static linkage means the binary should be fairly portable / distributable across distros!
      - name: Build artifacts
        run: |
          mkdir -p artifacts
          cp CHANGELOG.md CONTRIBUTORS.md LICENSE artifacts/
          cp build/linux-vcpkg-static/Release/* artifacts/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: OpenLoco-linux-i686-glibc2.35
          path: artifacts
          if-no-files-found: error
