name: CI
on: [push, pull_request, workflow_dispatch]
env:
  OPENLOCO_BUILD_SERVER: GitHub
jobs:
  check-code-formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    container:
      image: openrct2/openrct2-build:8-format
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run clang-format
        run: scripts/check-code-formatting.sh
  windows:
    name: Windows
    runs-on: windows-latest
    needs: check-code-formatting
    env:
      CONFIGURATION: Release
      POWERSHELL_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Restore artifacts, or setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: 1be4527b3f30ab4fd01b621a3fc355b49b995ad0 
      - name: Build OpenLoco
        shell: cmd
        run: |
          cmake --preset windows-msvc
          cmake --build --preset windows-msvc-release
      - name: Build artifacts
        run: |
          mkdir artifacts | Out-Null
          Copy-Item CHANGELOG.md,CONTRIBUTORS.md,DEVELOPMENTLOG.md,LICENSE artifacts
          Copy-Item build\windows-msvc\Release\* artifacts -Recurse
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenLoco-${{ runner.os }}-Win32-cmake
          path: artifacts
          if-no-files-found: error
      - name: Run Tests
        shell: cmd
        run: |
          ctest --test-dir build\windows-msvc\ --output-on-failure
  ubuntu:
    name: Ubuntu ${{ matrix.distro }} ${{ matrix.compiler }} i686
    runs-on: ubuntu-latest
    needs: check-code-formatting
    container: ghcr.io/openloco/openloco:6-${{ matrix.distro }}32
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++, clang++]
        distro: [focal, jammy]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Install GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master
      - name: Build OpenLoco
        run: |
          cmake --preset linux -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          cmake --build --preset linux-release
      - name: Run Tests
        run: |
          ctest --test-dir build/linux/ --output-on-failure

  fedora:
    name: Fedora shared=${{ matrix.build_shared_libs }} i686 MinGW32
    runs-on: ubuntu-latest
    needs: check-code-formatting
    container: ghcr.io/openloco/openloco:6-mingw32
    strategy:
      fail-fast: false
      matrix:
        build_shared_libs: [on, off]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Install GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master
      - name: Build OpenLoco
        run: |
          cmake --preset mingw -DBUILD_SHARED_LIBS=${{ matrix.build_shared_libs }}
          cmake --build --preset mingw-release
