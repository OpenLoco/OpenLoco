language: c

before_install:
    - docker pull openloco/openloco:$DOCKERIMG

install:
    - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*; fi
    - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git config remote.origin.fetch +refs/tags/*:refs/tags/*; fi
    - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git fetch --tags; fi

sudo: required
dist: trusty

matrix:
    include:
        - os: linux
          name: Ubuntu i686 GCC
          services:
            - docker
          env:
            - OPENLOCO_CMAKE_OPTS="-G Ninja -DCMAKE_BUILD_TYPE=release -DSDL2_DIR=/usr/lib/i386-linux-gnu/cmake/SDL2 -DSDL2_MIXER_PATH=/usr/lib/i386-linux-gnu -Dyaml-cpp_DIR=/usr/lib/i386-linux-gnu/cmake/yaml-cpp"
            - DOCKERIMG=ubuntu-i686
        - os: linux
          name: Ubuntu i686 Clang
          services:
            - docker
          env:
            - OPENLOCO_CMAKE_OPTS="-G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=release -DSDL2_DIR=/usr/lib/i386-linux-gnu/cmake/SDL2 -DSDL2_MIXER_PATH=/usr/lib/i386-linux-gnu -Dyaml-cpp_DIR=/usr/lib/i386-linux-gnu/cmake/yaml-cpp"
            - DOCKERIMG=ubuntu-i686
        - os: linux
          name: Fedora i686 MinGW32
          services:
            - docker
          env:
            - OPENLOCO_CMAKE_OPTS="-G Ninja -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt -DCMAKE_BUILD_TYPE=release -DBOOST_ROOT=/usr/i686-w64-mingw32/sys-root/mingw/ -DSDL2_DIR=/usr/i686-w64-mingw32/sys-root/mingw/lib/cmake/SDL2/ -DSDL2_MIXER_PATH=/usr/i686-w64-mingw32/sys-root/mingw/ -Dyaml-cpp_DIR=/usr/i686-w64-mingw32/sys-root/mingw/CMake/"
            - DOCKERIMG=fedora-mingw32
        - os: linux
          name: clang-format
          before_install: []
          language: cpp
          sudo: false
          addons:
            apt:
              sources:
                - llvm-toolchain-trusty-5.0
              packages:
                - clang-format-5.0
          script:
            - ./scripts/run-clang-format.py -r src
        - os: osx
          name: macOS 10.13 Clang (Xcode 9.3)
          osx_image: xcode9.3 # macOS 10.13
          language: cpp
          before_install:
            - export HOMEBREW_NO_AUTO_UPDATE=1
          install:
            - brew uninstall --ignore-dependencies boost
            - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*; fi
            - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git config remote.origin.fetch +refs/tags/*:refs/tags/*; fi
            - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git fetch --tags; fi
          script:
            - curl -L https://github.com/OpenLoco/Dependencies/releases/download/v1.2.0/openloco.dependencies.macos.1.2.0.zip -o dependencies.zip
            - unzip -q dependencies.zip -d vcpkg/
            - curl -L https://github.com/OpenLoco/Dependencies/releases/download/v1.1.1/macos-x86-static-boost-1.68.0.zip -o boost.zip
            - unzip -q boost.zip -d boost/
            - mkdir build && cd build
            - cmake .. "-DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x86-osx "-DBOOST_ROOT=($pwd)/../boost"
            - make -j2
            - zip -r openloco-macos.zip openloco.app
            - curl --progress-bar --upload-file openloco-macos.zip https://transfer.sh/openloco-macos.zip; echo;
        - os: osx
          name: macOS 10.12 Clang (Xcode 9.2)
          osx_image: xcode9.2 # macOS 10.12 (lacks std::byte)
          language: cpp
          before_install:
            - export HOMEBREW_NO_AUTO_UPDATE=1
          install:
            - brew uninstall --ignore-dependencies boost
            - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*; fi
            - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git config remote.origin.fetch +refs/tags/*:refs/tags/*; fi
            - if [[ $TRAVIS_JOB_NAME != "clang-format" ]]; then git fetch --tags; fi
          script:
            - curl -L https://github.com/OpenLoco/Dependencies/releases/download/v1.2.0/openloco.dependencies.macos.1.2.0.zip -o dependencies.zip
            - unzip -q dependencies.zip -d vcpkg/
            - curl -L https://github.com/OpenLoco/Dependencies/releases/download/v1.1.1/macos-x86-static-boost-1.68.0.zip -o boost.zip
            - unzip -q boost.zip -d boost/
            - mkdir build && cd build
            - cmake .. "-DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x86-osx "-DBOOST_ROOT=($pwd)/../boost"
            - make -j2


script:
    - mkdir build
    - docker run -v $(pwd):/openloco -w /openloco/build -i -t openrct2/openloco:$DOCKERIMG bash -c "cmake ../ ${OPENLOCO_CMAKE_OPTS} && ninja -k0"

deploy:
    provider: releases
    api_key:
        secure: Kuzqa3+lCSDyGu3HE4k/fRmqoBTs6DYiVnO7olAnvaqJxzE+BNAlgPbZmO+mw83xJY7u6mKrrM2y7chzbsmUqVFgRig9OC2K7aCVTRkxiXwDFGjksedXnYc35kGE+p9wv7sk8JLcoqjrqkhpLAqjdgsT8V+VvlSVWjp4J0DYbR7M4COBSMGxdvmeQwG6VrXjdRy90c4FEffLuWG79J879hqYVkXNW4GnYan6YW7sX/YkUmXTbbrT618Whb90jZwu1njn+qTWRyIb2EQaPdAhjGBBDt9QIhauv6AkyZOgL9C79ltizr1l24pnYexcQVv7QZ5ipBPk4weAzbSeJRaMS15qG7w+qOwwlduBB8YHO3DKKlyvAlXtVdeOj4LeaTIGctGKIO/2320rZeIzAIA59uyveKVyIqJpYlay5AMdoNvy//a4+huSdu9gHnNZJOACMRKUvRW+7T3clW8rBw4d7aO9siabps45Usbu+U1s/XKxVWMR65fXhxQwVh4u+NACUMK5/01L7SNKztw/x3eKf15ekxu+I2yBmWQRNWk0TRl4MV+qHt09hcJUU3rThaeJfHAM+/asgVDUn1e5rzktSGw8xxi1G3vjsBEAKts27+3AdDQRWVWPS9zfr+FNAG9W1C56uDQsnEMHbBXOLQ0Q7b7jxqdnS4kuZIjYPugkYTw=
    file: build/openloco-macos.zip
    skip_cleanup: true
    on:
        tags: true
        repo: OpenLoco/OpenLoco
